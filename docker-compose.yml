
services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: barbing_salon_default
    command: gunicorn --bind 0.0.0.0:8000 --timeout 0 barbing_salon.wsgi:application
    volumes:
      - .:/usr/src/app/
    ports:
      - "8000:8000"
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
    depends_on:
      - pgdb
      - redis
    restart: always

  celery:
    build:
      context: .
      dockerfile: Dockerfile-celery
    command: celery -A barbing_salon.celery worker -l INFO
    volumes:
      - .:/usr/src/app
    environment:
      - DEBUG=${DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - django
      - redis
    user: "1000:1000"
    restart: always

  pgdb:
    image: postgres
    container_name: pgdb
    environment:
      - POSTGRES_DB=${PGDATABASE}
      - POSTGRES_USER=${PGUSER}
      - POSTGRES_PASSWORD=${PGPASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data/
    restart: always

  redis:
    image: "redis:alpine"
    container_name: redis
    restart: always

volumes:
  pgdata:
